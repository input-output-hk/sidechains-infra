########## alice ##########################################################
---
apiVersion: v1
kind: Pod
metadata:
  name: alice
  namespace: sidechains-substrate-poc
  labels:
    app: sidechains-substrate-poc
    node: alice
spec:
  containers:
    - name: alice
      image: 689191102645.dkr.ecr.eu-central-1.amazonaws.com/sidechains:v0.0.1
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "1Gi"
      args:
        - "--name"
        - "alice"
        - "--base-path"
        - "/data/alice"
        - "--chain"
        - "local"
        - "--validator"
        - "--node-key"
        - "0000000000000000000000000000000000000000000000000000000000000001"
      volumeMounts:
        - name: data
          mountPath: /data
      ports:
        - containerPort: 30333
          name: tcp-30333
        - containerPort: 9946
          name: tcp-9946
        - containerPort: 9934
          name: tcp-9934
  volumes:
    - name: data
      emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: alice-service
  namespace: sidechains-substrate-poc
spec:
  type: NodePort
  selector:
    app: sidechains-substrate-poc
    node: alice
  ports:
    - name: tcp-30333
      port: 30333
      targetPort: 30333
    - name: tcp-9946
      port: 9946
      targetPort: 9946
    - name: tcp-9934
      port: 9934
      targetPort: 9934
########## bob ##########################################################
---
apiVersion: v1
kind: Pod
metadata:
  name: bob
  namespace: sidechains-substrate-poc
  labels:
    app: sidechains-substrate-poc
    node: bob
spec:
  containers:
    - name: bob
      image: 689191102645.dkr.ecr.eu-central-1.amazonaws.com/sidechains:v0.0.1
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "1Gi"
      args:
        - "--name"
        - "bob"
        - "--base-path"
        - "/data/bob"
        - "--chain"
        - "local"
        - "--validator"
        - "--node-key"
        - "0000000000000000000000000000000000000000000000000000000000000002"
      volumeMounts:
        - name: data
          mountPath: /data
      ports:
        - containerPort: 30333
          name: tcp-30333
        - containerPort: 9946
          name: tcp-9946
        - containerPort: 9934
          name: tcp-9934
  volumes:
    - name: data
      emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: bob-service
  namespace: sidechains-substrate-poc
spec:
  type: NodePort
  selector:
    app: sidechains-substrate-poc
    node: bob
  ports:
    - name: tcp-30333
      port: 30333
      targetPort: 30333
    - name: tcp-9946
      port: 9946
      targetPort: 9946
    - name: tcp-9934
      port: 9934
      targetPort: 9934
########## charlie ##########################################################
---
apiVersion: v1
kind: Pod
metadata:
  name: charlie
  namespace: sidechains-substrate-poc
  labels:
    app: sidechains-substrate-poc
    node: charlie
spec:
  containers:
    - name: charlie
      image: 689191102645.dkr.ecr.eu-central-1.amazonaws.com/sidechains:v0.0.1
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "1Gi"
      args:
        - "--name"
        - "charlie"
        - "--base-path"
        - "/data/charlie"
        - "--chain"
        - "local"
        - "--validator"
        - "--node-key"
        - "0000000000000000000000000000000000000000000000000000000000000003"
      volumeMounts:
        - name: data
          mountPath: /data
      ports:
        - containerPort: 30333
          name: tcp-30333
        - containerPort: 9946
          name: tcp-9946
        - containerPort: 9934
          name: tcp-9934
  volumes:
    - name: data
      emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: charlie-service
  namespace: sidechains-substrate-poc
spec:
  type: NodePort
  selector:
    app: sidechains-substrate-poc
    node: charlie
  ports:
    - name: tcp-30333
      port: 30333
      targetPort: 30333
    - name: tcp-9946
      port: 9946
      targetPort: 9946
    - name: tcp-9934
      port: 9934
      targetPort: 9934
########## dave ##########################################################
---
apiVersion: v1
kind: Pod
metadata:
  name: dave
  namespace: sidechains-substrate-poc
  labels:
    app: sidechains-substrate-poc
    node: dave
spec:
  containers:
    - name: dave
      image: 689191102645.dkr.ecr.eu-central-1.amazonaws.com/sidechains:v0.0.1
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "1Gi"
      args:
        - "--name"
        - "dave"
        - "--base-path"
        - "/data/dave"
        - "--chain"
        - "local"
        - "--validator"
        - "--node-key"
        - "0000000000000000000000000000000000000000000000000000000000000004"
      volumeMounts:
        - name: data
          mountPath: /data
      ports:
        - containerPort: 30333
          name: tcp-30333
        - containerPort: 9946
          name: tcp-9946
        - containerPort: 9934
          name: tcp-9934
  volumes:
    - name: data
      emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: dave-service
  namespace: sidechains-substrate-poc
spec:
  type: NodePort
  selector:
    app: sidechains-substrate-poc
    node: dave
  ports:
    - name: tcp-30333
      port: 30333
      targetPort: 30333
    - name: tcp-9946
      port: 9946
      targetPort: 9946
    - name: tcp-9934
      port: 9934
      targetPort: 9934
########## eve ##########################################################
---
apiVersion: v1
kind: Pod
metadata:
  name: eve
  namespace: sidechains-substrate-poc
  labels:
    app: sidechains-substrate-poc
    node: eve
spec:
  containers:
    - name: eve
      image: 689191102645.dkr.ecr.eu-central-1.amazonaws.com/sidechains:v0.0.1
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "1Gi"
      args:
        - "--name"
        - "eve"
        - "--base-path"
        - "/data/eve"
        - "--chain"
        - "local"
        - "--validator"
        - "--node-key"
        - "0000000000000000000000000000000000000000000000000000000000000005"
      volumeMounts:
        - name: data
          mountPath: /data
      ports:
        - containerPort: 30333
          name: tcp-30333
        - containerPort: 9946
          name: tcp-9947
        - containerPort: 9934
          name: tcp-9934
  volumes:
    - name: data
      emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: eve-service
  namespace: sidechains-substrate-poc
spec:
  type: NodePort
  selector:
    app: sidechains-substrate-poc
    node: eve
  ports:
    - name: tcp-30333
      port: 30333
      targetPort: 30333
    - name: tcp-9946
      port: 9946
      targetPort: 9946
    - name: tcp-9934
      port: 9934
      targetPort: 9934
########## cardano-node ##########################################################
---
apiVersion: v1
kind: Pod
metadata:
  name: cardano-node
  namespace: sidechains-substrate-poc
  labels:
    app: sidechains-substrate-poc
    node: cardano-node
spec:
  containers:
    - name: cardano-node
      image: inputoutput/cardano-node:8.0.0
      imagePullPolicy: IfNotPresent
      ports:
        - containerPort: 3001
      env:
        - name: NETWORK
          value: "preview"
        - name: CARDANO_NODE_SOCKET_PATH
          value: /ipc/node.socket
      volumeMounts:
        - name: ipc
          mountPath: /ipc
        - name: datavol
          mountPath: /opt/cardano/data
  volumes:
    - name: ipc
      emptyDir: {}
    - name: datavol
      emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: cardano-node-service
  namespace: sidechains-substrate-poc
spec:
  type: NodePort
  selector:
    app: sidechains-substrate-poc
    node: cardano-node
  ports:
    - name: tcp-3001
      port: 3001
      targetPort: 3001
########## vector ##########################################################
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vector-config
  namespace: sidechains-substrate-poc
data:
  vector.toml: |
    [api]
    enabled = true
    address = "0.0.0.0:8686"
    [sources.log_file]
    type = "file"
    include = ["/var/log/*.log"]
    # [sinks.prometheus]
    # type = "prometheus_exporter"
    # inputs = [ "my-source-or-transform-id" ]
    [sinks.console]
    inputs = ["log_file"]
    target = "stdout"
    type = "console"
    encoding.codec = "json"
---
apiVersion: v1
kind: Service
metadata:
  name: vector-service
  namespace: sidechains-substrate-poc
spec:
  type: NodePort
  selector:
    app: sidechains-substrate-poc
    node: vector
  ports:
    - name: tcp-8686
      port: 8686
      targetPort: 8686
---
apiVersion: v1
kind: Pod
metadata:
  name: vector
  namespace: sidechains-substrate-poc
  labels:
    app: sidechains-substrate-poc
    node: vector
spec:
  containers:
    - name: vector
      image: timberio/vector:nightly-alpine
      imagePullPolicy: IfNotPresent
      ports:
        - containerPort: 8686
      volumeMounts:
        - name: vector-config-volume
          mountPath: /etc/vector
        - name: logs
          mountPath: /var/log
  volumes:
    - name: vector-config-volume
      configMap:
        name: vector-config
    - name: logs
      emptyDir: {}
########## postgres ##########################################################
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: sidechains-substrate-poc
spec:
  type: NodePort
  selector:
    app: sidechains-substrate-poc
    node: postgres
  ports:
    - name: tcp-5432
      port: 5432
      targetPort: 5432 
---
apiVersion: v1
kind: Pod
metadata:
  name: postgres
  namespace: sidechains-substrate-poc
  labels:
    app: sidechains-substrate-poc
    node: postgres
spec:
  containers:
    - name: postgres
      image: postgres:15.3
      ports:
        - containerPort: 5432
          protocol: TCP
      env:
        - name: POSTGRES_USERNAME
          value: "username"
        - name: POSTGRES_PASSWORD
          value: "password"
        - name: POSTGRES_HOST_AUTH_METHOD
          value: "trust"
        - name: POSTGRES_DB
          value: "cexplorer"
      volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        - name: postgres-run
          mountPath: /run/postgresql
  volumes:
    - name: postgres-data
      emptyDir: {}
    - name: postgres-run
      emptyDir: {}
########## db-sync ##########################################################
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgpass
  namespace: sidechains-substrate-poc
data:
  pgpass: "/var/run/postgresql:5432:cexplorer:*:*"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: secrets
  namespace: sidechains-substrate-poc
data:
  postgres_db: "cexplorer"
  postgres_user: "username"
  postgres_password: "password"
---
apiVersion: v1
kind: Service
metadata:
  name: db-sync-service
  namespace: sidechains-substrate-poc
spec:
  type: NodePort
  selector:
    app: sidechains-substrate-poc
    node: db-sync
  ports:
    - name: tcp-3001
      port: 3001
      targetPort: 3001
---
apiVersion: v1
kind: Pod
metadata:
  name: db-sync
  namespace: sidechains-substrate-poc
  labels:
    app: sidechains-substrate-poc
    node: db-sync
spec:
  containers:
        - name: db-sync
          image: inputoutput/cardano-db-sync:latest
          env:
            - name: NETWORK
              value: "preview"
            - name: PGPASSFILE
              value: "/pgpass/pgpass"
            - name: CARDANO_NODE_SOCKET_PATH
              value: /ipc/node.socket
            - name: CARDANO_NODE_SOCKET_TCP_HOST
              value: "localhost"
            - name: CARDANO_NODE_SOCKET_TCP_PORT
              value: "3001"
          volumeMounts:
            - name: ipc
              mountPath: /ipc
            - name: postgres-run
              mountPath: /run/postgresql
            - name: pgpass
              mountPath: /pgpass
            - name: secrets
              mountPath: /run/secrets
  volumes:
    - name: ipc
      emptyDir: {}
    - name: postgres-run
      emptyDir: {}
    - name: pgpass
      configMap:
        name: pgpass
    - name: secrets
      configMap:
        name: secrets
########## bridge-backend ##########################################################
---
apiVersion: v1
kind: Service
metadata:
  name: bridge-backend-service
  namespace: sidechains-substrate-poc
spec:
  type: NodePort
  selector:
    app: sidechains-substrate-poc
    node: bridge-backend
  ports:
    - name: tcp-5432
      port: 5432
      targetPort: 5432 
---
apiVersion: v1
kind: Pod
metadata:
  name: bridge-backend
  namespace: sidechains-substrate-poc
  labels:
    app: sidechains-substrate-poc
    node: bridge-backend
spec:
  containers:
    - name: bridge-backend
      image: 305415268059.dkr.ecr.eu-central-1.amazonaws.com/bridge-backend:0.0.15
      volumeMounts:
      - name: node-ipc
        mountPath: /node-ipc
      - name: postgres-data
        mountPath: /var/lib/postgresql/data
  volumes:
    - name: node-ipc
      emptyDir: {}
    - name: postgres-data
      emptyDir: {}
