---
apiVersion: v1
kind: Service
metadata:
  name: relay-service
  namespace: sc
spec:
  type: NodePort
  selector:
    app: sidechains-substrate-poc
    node: relay
  ports:
    - name: vector-metrics
      port: 9182
      targetPort: 9182
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: byron-genesis
  namespace: sc
data:
  byron-genesis.json: |
    { "bootStakeholders":
        { "021e737009040bf7f1e7b1bcc148f29d748d4a6b561902c95e4a9f36": 1
        , "0bc82ced9544980b9ffe7f64b1538bbda6804a5cc32c8035485e184b": 1
        , "18ed9844deef98cf9ba8b39791dede0538d2d2fa79bf67ef37dcc826": 1
        , "66cfa84ad0ee5ca8586244c8393007cf3d9622d77cfa03fd4f35065b": 1
        , "76c4d6c68c0ef81ae364411a84e52ce66089ed006ca29adfc0227901": 1
        , "8cc6b89fec65cc83d34b7bab2e6494db631d8476a86625767dd0c2a0": 1
        , "e90060fdc085ac9f63cdb3b32ba1d84e0f7eb98561687b213b4c8770": 1
        }
    , "heavyDelegation":
        { "021e737009040bf7f1e7b1bcc148f29d748d4a6b561902c95e4a9f36":
            { "omega": 0
            , "issuerPk":
                "6hSFCotivD08t02n43RMiaF9LzwtYVrFMu/WX6ShfEsxfdXFL5Y6c+DwHSZOCywU0RJz5er2icIO03UytC9NTg=="
            , "delegatePk":
                "JEnSVQTPGriTx1+lAMkKhCNsMBDNPGw+NiEvNPh4ui6IdvxrO+WkQPTy5U865XB4VFvi/zb7d+H1bilnztQNBg=="
            , "cert":
                "558952d17442e8cc73f0c7dd606e329b38ed2ec0c1f83fe2567d28b21ef2223d2d23640cd0531f75832b50e519631c48643fcfaa7168851645dce07b90d87f0e"
            }
        , "0bc82ced9544980b9ffe7f64b1538bbda6804a5cc32c8035485e184b":
            { "omega": 0
            , "issuerPk":
                "MJ7IskKU8GKk0Eeg3zhfSOK1DDVXOMHD2V/zhEpODUtL9YB0Y7sXnbZfg3+Df05hskP5Jz+dZvdC6DH/dP9jmQ=="
            , "delegatePk":
                "hwO7NJL7LfAk5e/QG61FKcdORoK60tvprE3063Muh4EQKrWA6l7t23B2GziK8D0hRO0j5W1Gzpn8WW69XLIlKA=="
            , "cert":
                "2bccf50d0c3cbb03dd29cfba817e8ba615db3d7722b41b264ad08722e548cfe83d069b29d13e490823d7519ecdd9940ea49573f6027056c4bd58da1adf75020e"
            }
        , "18ed9844deef98cf9ba8b39791dede0538d2d2fa79bf67ef37dcc826":
            { "omega": 0
            , "issuerPk":
                "pXbW4Jak8maeuWiosvrurykKnqDSHswUjroonSDS3fTnWS+BKe+vjT4zZJNKhQ33KbagiHVJ5CJUNggfsCtG2g=="
            , "delegatePk":
                "rbJAZp3kWCUvp8dnLR6qsgpGU+qKAFow4NHYKWiKCkfm1qFCFONob50N1IbNWCGWAhg38ZPTvBazTasjsfj6yQ=="
            , "cert":
                "89e1638e31fd3d402cecb897ba773d8c2c11c2d3cff2462b266e21461539b1a4fe8fb528e159b9af473799b51e49aa5b5816a88f10c484aa7cef7ad12850830a"
            }
        , "66cfa84ad0ee5ca8586244c8393007cf3d9622d77cfa03fd4f35065b":
            { "omega": 0
            , "issuerPk":
                "/LGZjmmcAMRisP7Rf454GM2QUKgj2aAyqE+iQo2PIEhcistFOlT+idtbLTceZAnQcwwPJDtTcNi+EnPQyscZOg=="
            , "delegatePk":
                "rinFUiKKCPPFY0ULEKn1SPRgLVmOS3jdTXDtrxK6VI1I11G3uBS1Olxi0mQSN3kf+B3hm/xHkuUDVNaSXNiBeQ=="
            , "cert":
                "3e7f30bb68c5bc4d23c2a730ac154a188a1fd45aac3f438efd380303171443d2ca4f50e5a1ff66b40ae3da64697f2599956ae06c21b73fa828b8c0dc9fb27302"
            }
        , "76c4d6c68c0ef81ae364411a84e52ce66089ed006ca29adfc0227901":
            { "omega": 0
            , "issuerPk":
                "9EE85tTLdSSR4T1Xoy6n9wr6jlbavCdfp9oQKusskO3DSSyNqRYS7QzYQ96j/WnphUey63082YkKijMfF9A4eA=="
            , "delegatePk":
                "dvyHDkXg8LFtb0K6Sitl8OGSEZPvfCVQYLDR6Au6t6/ROvlerMKQ8uri4fG7hQQzbHKtdKWgv94t+zuFJTQ1fw=="
            , "cert":
                "5ec0ed46ae7e575bdb089f1bceca3b2689b13a7162fe08578fe60ba64607fffaa507412a97652c3c81cc0ef93ff404cf809a628ae19faba1a035fca0505c1d04"
            }
        , "8cc6b89fec65cc83d34b7bab2e6494db631d8476a86625767dd0c2a0":
            { "omega": 0
            , "issuerPk":
                "Hr5S5PAxf9HSB4FzmtZzaFcXrNrctrI5XUrDrnCkOUTX6rhbtOMkXU3sWVDOvU6LNSSr3/Ws2+iCYZIr7LmTWg=="
            , "delegatePk":
                "FaLH2b5H/XS31YRnm98N6fP4Etx6m+GbniVAXMwOp8KhYXPKBJBsX/EjIy3pSkvRBhGCjsycB0yrDxWMi5ZsIQ=="
            , "cert":
                "10f06304cceb42071605ebba67b308c7568e5e6fe0d773c58f7e8c13bc8d8a340f70a4fd5e1b4a1c1db1de5c7646802bbc929d6c82d7adb8a77cb6ad77eac50a"
            }
        , "e90060fdc085ac9f63cdb3b32ba1d84e0f7eb98561687b213b4c8770":
            { "omega": 0
            , "issuerPk":
                "B2R+VXzy3c8bxncdOpQ2Z/tblxRNQO8AXQ0OsJDQvZYnLeGQcLD78kyYLpi3nfuS4SfnLar23NV4yiEVwaw+Yw=="
            , "delegatePk":
                "nACHGIBacymrKwn07iW/a5ZKJCPZ2cKQqeXw3ivR7WOYVUuufWhZlCoUTZ7rtBqoDaexblUQwkC7hA7AmNA3FA=="
            , "cert":
                "b5440daa05f7fae557df46e4f1b7c5802b86f465daad1137e315abf6e72f1c877207276abb8dcba86e18e42d39b34c2f0fa82ba2919944cdc8e2e5264baa450b"
            }
        }
    , "startTime": 1666656000
    , "nonAvvmBalances":
        { "FHnt4NL7yPXjpZtYj1YUiX9QYYUZGXDT9gA2PJXQFkTSMx3EgawXK5BUrCHdhe2":
            "0"
        , "FHnt4NL7yPXk7D87qAWEmfnL7wSQ9AzBU2mjZt3eM48NSCbygxgzAU6vCGiRZEW":
            "0"
        , "FHnt4NL7yPXpazQsTdJ3Gp1twQUo4N5rrgGbRNSzchjchPiApc1k4CvqDMcdd7H":
            "0"
        , "FHnt4NL7yPXtNo1wLCLZyGTMfAvB14h8onafiYkM7B69ZwvGgXeUyQWfi7FPrif":
            "0"
        , "FHnt4NL7yPXtmi4mAjD43V3NB3shDs1gCuHNcMLPsRWjaw1b2yRV2xad8S8V6aq":
            "0"
        , "FHnt4NL7yPXvDWHa8bVs73UEUdJd64VxWXSFNqetECtYfTd9TtJguJ14Lu3feth":
            "30000000000000000"
        , "FHnt4NL7yPXvNSRpCYydjRr7koQCrsTtkovk5uYMimgqMJX2DyrEEBqiXaTd8rG":
            "0"
        , "FHnt4NL7yPY9rTvdsCeyRnsbzp4bN7XdmAZeU5PzA1qR2asYmN6CsdxJw4YoDjG":
            "0"
        }
    , "blockVersionData":
        { "scriptVersion": 0
        , "slotDuration": "20000"
        , "maxBlockSize": "2000000"
        , "maxHeaderSize": "2000000"
        , "maxTxSize": "4096"
        , "maxProposalSize": "700"
        , "mpcThd": "20000000000000"
        , "heavyDelThd": "300000000000"
        , "updateVoteThd": "1000000000000"
        , "updateProposalThd": "100000000000000"
        , "updateImplicit": "10000"
        , "softforkRule":
            { "initThd": "900000000000000"
            , "minThd": "600000000000000"
            , "thdDecrement": "50000000000000"
            }
        , "txFeePolicy":
            { "summand": "155381000000000" , "multiplier": "43946000000" }
        , "unlockStakeEpoch": "18446744073709551615"
        }
    , "protocolConsts": { "k": 432 , "protocolMagic": 2 }
    , "avvmDistr": {}
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-json
  namespace: sc
data:
  config.json: |
    {
      "AlonzoGenesisFile": "alonzo-genesis.json",
      "AlonzoGenesisHash": "7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874",
      "ApplicationName": "cardano-sl",
      "ApplicationVersion": 0,
      "ByronGenesisFile": "byron-genesis.json",
      "ByronGenesisHash": "83de1d7302569ad56cf9139a41e2e11346d4cb4a31c00142557b6ab3fa550761",
      "EnableP2P": true,
      "LastKnownBlockVersion-Alt": 0,
      "LastKnownBlockVersion-Major": 3,
      "LastKnownBlockVersion-Minor": 1,
      "Protocol": "Cardano",
      "RequiresNetworkMagic": "RequiresMagic",
      "ShelleyGenesisFile": "shelley-genesis.json",
      "ShelleyGenesisHash": "363498d1024f84bb39d3fa9593ce391483cb40d479b87233f868d6e57c3a400d",
      "TargetNumberOfActivePeers": 20,
      "TargetNumberOfEstablishedPeers": 50,
      "TargetNumberOfKnownPeers": 100,
      "TargetNumberOfRootPeers": 100,
      "TestAllegraHardForkAtEpoch": 0,
      "TestAlonzoHardForkAtEpoch": 0,
      "TestEnableDevelopmentHardForkEras": true,
      "TestEnableDevelopmentNetworkProtocols": true,
      "TestMaryHardForkAtEpoch": 0,
      "TestShelleyHardForkAtEpoch": 0,
      "TraceAcceptPolicy": true,
      "TraceBlockFetchClient": false,
      "TraceBlockFetchDecisions": false,
      "TraceBlockFetchProtocol": false,
      "TraceBlockFetchProtocolSerialised": false,
      "TraceBlockFetchServer": false,
      "TraceChainDb": true,
      "TraceChainSyncBlockServer": false,
      "TraceChainSyncClient": false,
      "TraceChainSyncHeaderServer": false,
      "TraceChainSyncProtocol": false,
      "TraceConnectionManager": true,
      "TraceDNSResolver": true,
      "TraceDNSSubscription": true,
      "TraceDiffusionInitialization": true,
      "TraceErrorPolicy": true,
      "TraceForge": true,
      "TraceHandshake": false,
      "TraceInboundGovernor": true,
      "TraceIpSubscription": true,
      "TraceLedgerPeers": true,
      "TraceLocalChainSyncProtocol": false,
      "TraceLocalErrorPolicy": true,
      "TraceLocalHandshake": false,
      "TraceLocalRootPeers": true,
      "TraceLocalTxSubmissionProtocol": false,
      "TraceLocalTxSubmissionServer": false,
      "TraceMempool": true,
      "TraceMux": false,
      "TracePeerSelection": true,
      "TracePeerSelectionActions": true,
      "TracePublicRootPeers": true,
      "TraceServer": true,
      "TraceTxInbound": false,
      "TraceTxOutbound": false,
      "TraceTxSubmissionProtocol": false,
      "TracingVerbosity": "NormalVerbosity",
      "TurnOnLogMetrics": true,
      "TurnOnLogging": true,
      "defaultBackends": [
        "KatipBK"
      ],
      "defaultScribes": [
        [
          "StdoutSK",
          "stdout"
        ]
      ],
      "hasEKG": 12788,
      "hasPrometheus": [
        "127.0.0.1",
        12798
      ],
      "minSeverity": "Info",
      "options": {
        "mapBackends": {
          "cardano.node.metrics": [
            "EKGViewBK"
          ],
          "cardano.node.resources": [
            "EKGViewBK"
          ]
        },
        "mapSubtrace": {
          "cardano.node.metrics": {
            "subtrace": "Neutral"
          }
        }
      },
      "rotation": {
        "rpKeepFilesNum": 10,
        "rpLogLimitBytes": 5000000,
        "rpMaxAgeHours": 24
      },
      "setupBackends": [
        "KatipBK"
      ],
      "setupScribes": [
        {
          "scFormat": "ScText",
          "scKind": "StdoutSK",
          "scName": "stdout",
          "scRotation": null
        }
      ]
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: relay-vector-configmap
  namespace: sc
data:
  vector.toml: |
    # Vector's API for introspection
    [api]
    enabled = true
    address = "127.0.0.1:8686"
    playground = true

    # Input data from Kubernetes
    [sources.kubernetes_logs]
    type = "kubernetes_logs"

    # Transform data
    [transforms.remap]
    type = "remap"
    inputs = ["kubernetes_logs"]
    source = '''
    .processed_at = now()
    '''

    # Send data to Loki
    [sinks.loki]
    type = "loki"
    inputs = ["remap"]
    endpoint = "http://monitoring-service.sc:3100"
    encoding.codec = "json"
    labels.environment = "production"
    labels.application = "relay-service"

    # Prometheus Metrics
    [sinks.prometheus]
    type = "prometheus_exporter"
    inputs = ["remap"]
    address = "0.0.0.0:9182"
---
apiVersion: v1
kind: Pod
metadata:
  name: relay
  namespace: sc
  labels:
    app: sidechains-substrate-poc
    substrate-node: 'true'
spec:
  nodeSelector:
    pod: relay
  containers:
    - name: cardano-node
      image: inputoutput/cardano-node:1.35.7
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "4096Mi"
          cpu: "1500m"
        requests:
          memory: "4096Mi"
          cpu: "1500m"
      env:
        - name: NETWORK
          value: "preview"
        - name: CARDANO_NODE_SOCKET_PATH
          value: /ipc/node.socket
      volumeMounts:
        - name: ipc
          mountPath: /ipc
        - name: cardano-node-data
          mountPath: /data
    - name: relay
      image: 689191102645.dkr.ecr.eu-central-1.amazonaws.com/relay:1.1
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "4096Mi"
          cpu: "1500m"
        requests:
          memory: "4096Mi"
          cpu: "1500m"
      env:
        - name: NODE_URL
          value: "http://alice-service"
    - name: ogmios
      image: cardanosolutions/ogmios:v5.5.7-preview
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "4096Mi"
          cpu: "1500m"
        requests:
          memory: "4096Mi"
          cpu: "1500m"
      args:
        - "--node-socket"
        - "/ipc/node.socket"
        - "--node-config"
        - "/config/preview/config.json"
        - "--host"
        - "localhost"
      #command: ["--node-socket", "/ipc/node.socket", "--node-config", "/config/preview/config.json", "--host", "localhost"]
      volumeMounts:
        - name: ipc
          mountPath: /ipc
        - name: cardano-node-config
          mountPath: /config
        - name: config-json
          mountPath: /config/preview
        - name: byron-genesis
          mountPath: /config/preview
    - name: kupo
      image: cardanosolutions/kupo:v2.2.0
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "4096Mi"
          cpu: "1500m"
        requests:
          memory: "4096Mi"
          cpu: "1500m"
      args:
        - "--node-socket"
        - "/ipc/node.socket"
        - "--node-config"
        - "/config/preview/config.json"
        - "--host"
        - "localhost"
        - "--workdir"
        - "/db"
        - "--match"
        - "*"
        - "--since"
        - "origin"
      #command: ["--node-socket", "/ipc/node.socket", "--node-config", "/config/preview/config.json", "--host", "localhost", "--workdir", "/db", "--match", "\"*\"", "--since", "origin"]
      volumeMounts:
        - name: kupo-workdir
          mountPath: /db
        - name: ipc
          mountPath: /ipc
        - name: cardano-node-config
          mountPath: /config
        - name: config-json
          mountPath: /config/preview
        - name: byron-genesis
          mountPath: /config/preview
    - name: vector
      image: timberio/vector:nightly-alpine
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "300Mi"
          cpu: "1000m"
        requests:
          memory: "300Mi"
          cpu: "1000m"
      env:
        - name: VECTOR_SELF_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName 
      ports:
        - containerPort: 8686
        - containerPort: 9182
      volumeMounts:
        - name: vector-config
          mountPath: /etc/vector
        - name: vector-logs
          mountPath: /var/log

  volumes:
    - name: cardano-node-data
      persistentVolumeClaim:
        claimName: relay-claim-cardano-node-data
    - name: ipc
      emptyDir: {}
    - name: substrate-data
      persistentVolumeClaim:
        claimName: relay-claim-substrate-data
    - name: cardano-node-config
      persistentVolumeClaim:
        claimName: relay-claim-cardano-node-config
    - name: kupo-workdir
      persistentVolumeClaim:
        claimName: relay-claim-kupo-workdir
    - name: vector-config
      configMap:
        name: relay-vector-configmap
    - name: vector-logs
      persistentVolumeClaim:
        claimName: relay-claim-vector-logs
    - name: config-json
      configMap:
        name: config-json
    - name: byron-genesis
      configMap:
        name: byron-genesis