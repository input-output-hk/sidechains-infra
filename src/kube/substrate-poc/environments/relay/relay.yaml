---
apiVersion: v1
kind: Service
metadata:
  name: relay-service
  namespace: sc
spec:
  type: NodePort
  selector:
    app: sidechains-substrate-poc
    node: relay
  ports:
    - name: vector-metrics
      port: 9182
      targetPort: 9182
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-json
  namespace: sc
data:
  config.json: |
    {
      "AlonzoGenesisFile": "alonzo-genesis.json",
      "AlonzoGenesisHash": "7e94a15f55d1e82d10f09203fa1d40f8eede58fd8066542cf6566008068ed874",
      "ApplicationName": "cardano-sl",
      "ApplicationVersion": 0,
      "ByronGenesisFile": "byron-genesis.json",
      "ByronGenesisHash": "83de1d7302569ad56cf9139a41e2e11346d4cb4a31c00142557b6ab3fa550761",
      "EnableP2P": true,
      "LastKnownBlockVersion-Alt": 0,
      "LastKnownBlockVersion-Major": 3,
      "LastKnownBlockVersion-Minor": 1,
      "Protocol": "Cardano",
      "RequiresNetworkMagic": "RequiresMagic",
      "ShelleyGenesisFile": "shelley-genesis.json",
      "ShelleyGenesisHash": "363498d1024f84bb39d3fa9593ce391483cb40d479b87233f868d6e57c3a400d",
      "TargetNumberOfActivePeers": 20,
      "TargetNumberOfEstablishedPeers": 50,
      "TargetNumberOfKnownPeers": 100,
      "TargetNumberOfRootPeers": 100,
      "TestAllegraHardForkAtEpoch": 0,
      "TestAlonzoHardForkAtEpoch": 0,
      "TestEnableDevelopmentHardForkEras": true,
      "TestEnableDevelopmentNetworkProtocols": true,
      "TestMaryHardForkAtEpoch": 0,
      "TestShelleyHardForkAtEpoch": 0,
      "TraceAcceptPolicy": true,
      "TraceBlockFetchClient": false,
      "TraceBlockFetchDecisions": false,
      "TraceBlockFetchProtocol": false,
      "TraceBlockFetchProtocolSerialised": false,
      "TraceBlockFetchServer": false,
      "TraceChainDb": true,
      "TraceChainSyncBlockServer": false,
      "TraceChainSyncClient": false,
      "TraceChainSyncHeaderServer": false,
      "TraceChainSyncProtocol": false,
      "TraceConnectionManager": true,
      "TraceDNSResolver": true,
      "TraceDNSSubscription": true,
      "TraceDiffusionInitialization": true,
      "TraceErrorPolicy": true,
      "TraceForge": true,
      "TraceHandshake": false,
      "TraceInboundGovernor": true,
      "TraceIpSubscription": true,
      "TraceLedgerPeers": true,
      "TraceLocalChainSyncProtocol": false,
      "TraceLocalErrorPolicy": true,
      "TraceLocalHandshake": false,
      "TraceLocalRootPeers": true,
      "TraceLocalTxSubmissionProtocol": false,
      "TraceLocalTxSubmissionServer": false,
      "TraceMempool": true,
      "TraceMux": false,
      "TracePeerSelection": true,
      "TracePeerSelectionActions": true,
      "TracePublicRootPeers": true,
      "TraceServer": true,
      "TraceTxInbound": false,
      "TraceTxOutbound": false,
      "TraceTxSubmissionProtocol": false,
      "TracingVerbosity": "NormalVerbosity",
      "TurnOnLogMetrics": true,
      "TurnOnLogging": true,
      "defaultBackends": [
        "KatipBK"
      ],
      "defaultScribes": [
        [
          "StdoutSK",
          "stdout"
        ]
      ],
      "hasEKG": 12788,
      "hasPrometheus": [
        "127.0.0.1",
        12798
      ],
      "minSeverity": "Info",
      "options": {
        "mapBackends": {
          "cardano.node.metrics": [
            "EKGViewBK"
          ],
          "cardano.node.resources": [
            "EKGViewBK"
          ]
        },
        "mapSubtrace": {
          "cardano.node.metrics": {
            "subtrace": "Neutral"
          }
        }
      },
      "rotation": {
        "rpKeepFilesNum": 10,
        "rpLogLimitBytes": 5000000,
        "rpMaxAgeHours": 24
      },
      "setupBackends": [
        "KatipBK"
      ],
      "setupScribes": [
        {
          "scFormat": "ScText",
          "scKind": "StdoutSK",
          "scName": "stdout",
          "scRotation": null
        }
      ]
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: relay-vector-configmap
  namespace: sc
data:
  vector.toml: |
    # Vector's API for introspection
    [api]
    enabled = true
    address = "127.0.0.1:8686"
    playground = true

    # Input data from Kubernetes
    [sources.kubernetes_logs]
    type = "kubernetes_logs"

    # Transform data
    [transforms.remap]
    type = "remap"
    inputs = ["kubernetes_logs"]
    source = '''
    .processed_at = now()
    '''

    # Send data to Loki
    [sinks.loki]
    type = "loki"
    inputs = ["remap"]
    endpoint = "http://monitoring-service.sc:3100"
    encoding.codec = "json"
    labels.environment = "production"
    labels.application = "relay-service"

    # Prometheus Metrics
    [sinks.prometheus]
    type = "prometheus_exporter"
    inputs = ["remap"]
    address = "0.0.0.0:9182"
---
apiVersion: v1
kind: Pod
metadata:
  name: relay
  namespace: sc
  labels:
    app: sidechains-substrate-poc
    substrate-node: 'true'
spec:
  nodeSelector:
    pod: relay
  containers:
    - name: cardano-node
      image: inputoutput/cardano-node:1.35.7
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "4096Mi"
          cpu: "1500m"
        requests:
          memory: "4096Mi"
          cpu: "1500m"
      env:
        - name: NETWORK
          value: "preview"
        - name: CARDANO_NODE_SOCKET_PATH
          value: /ipc/node.socket
      volumeMounts:
        - name: ipc
          mountPath: /ipc
        - name: cardano-node-data
          mountPath: /data
    - name: relay
      image: 689191102645.dkr.ecr.eu-central-1.amazonaws.com/relay:1.1
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "4096Mi"
          cpu: "1500m"
        requests:
          memory: "4096Mi"
          cpu: "1500m"
      env:
        - name: NODE_URL
          value: "http://alice-service"
    - name: ogmios
      image: cardanosolutions/ogmios:v5.5.7-preview
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "4096Mi"
          cpu: "1500m"
        requests:
          memory: "4096Mi"
          cpu: "1500m"
      args:
        - "--node-socket"
        - "/ipc/node.socket"
        - "--node-config"
        - "/config/preview/config.json"
        - "--host"
        - "localhost"
      #command: ["--node-socket", "/ipc/node.socket", "--node-config", "/config/preview/config.json", "--host", "localhost"]
      volumeMounts:
        - name: ipc
          mountPath: /ipc
        - name: cardano-node-config
          mountPath: /config
        - name: config-json
          mountPath: /config/preview
    - name: kupo
      image: cardanosolutions/kupo:v2.2.0
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "4096Mi"
          cpu: "1500m"
        requests:
          memory: "4096Mi"
          cpu: "1500m"
      args:
        - "--node-socket"
        - "/ipc/node.socket"
        - "--node-config"
        - "/config/preview/config.json"
        - "--host"
        - "localhost"
        - "--workdir"
        - "/db"
        - "--match"
        - "*"
        - "--since"
        - "origin"
      #command: ["--node-socket", "/ipc/node.socket", "--node-config", "/config/preview/config.json", "--host", "localhost", "--workdir", "/db", "--match", "\"*\"", "--since", "origin"]
      volumeMounts:
        - name: kupo-workdir
          mountPath: /db
        - name: ipc
          mountPath: /ipc
        - name: cardano-node-config
          mountPath: /config
        - name: config-json
          mountPath: /config/preview
    - name: vector
      image: timberio/vector:nightly-alpine
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "300Mi"
          cpu: "1000m"
        requests:
          memory: "300Mi"
          cpu: "1000m"
      env:
        - name: VECTOR_SELF_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName 
      ports:
        - containerPort: 8686
        - containerPort: 9182
      volumeMounts:
        - name: vector-config
          mountPath: /etc/vector
        - name: vector-logs
          mountPath: /var/log

  volumes:
    - name: cardano-node-data
      persistentVolumeClaim:
        claimName: relay-claim-cardano-node-data
    - name: ipc
      emptyDir: {}
    - name: substrate-data
      persistentVolumeClaim:
        claimName: relay-claim-substrate-data
    - name: cardano-node-config
      persistentVolumeClaim:
        claimName: relay-claim-cardano-node-config
    - name: kupo-workdir
      persistentVolumeClaim:
        claimName: relay-claim-kupo-workdir
    - name: vector-config
      configMap:
        name: relay-vector-configmap
    - name: vector-logs
      persistentVolumeClaim:
        claimName: relay-claim-vector-logs
    - name: config-json
      configMap:
        name: config-json