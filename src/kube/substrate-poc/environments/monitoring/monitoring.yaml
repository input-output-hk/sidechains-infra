---
apiVersion: v1
kind: Service
metadata:
  name: monitoring-service
  namespace: monitoring
spec:
  type: NodePort
  selector:
    app: monitoring-pod
  ports:
    - name: grafana
      port: 3000
      targetPort: 3000
      nodePort: 30000
    - name: prometheus
      port: 9090
      targetPort: 9090
      nodePort: 30010
    - name: loki
      port: 3100
      targetPort: 3100
      nodePort: 30020
    - name: vector-api
      port: 8686
      targetPort: 8686
      nodePort: 30030
    - name: vector-prometheus
      port: 9283
      targetPort: 9283
      nodePort: 30040
    - name: alertmanager
      port: 9093
      targetPort: 9093
      nodePort: 30050
---
apiVersion: v1
kind: Pod
metadata:
  name: monitoring
  namespace: monitoring
  labels:
    app: monitoring-pod
spec:
  nodeSelector:
    pod: monitoring
  containers:
    - name: vector
      image: timberio/vector:nightly-alpine
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "4096Mi"
          cpu: "1500m"
        requests:
          memory: "4096Mi"
          cpu: "1500m"
      ports:
        - containerPort: 8686
      env:
        - name: VECTOR_SELF_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      volumeMounts:
        - name: vector-config
          mountPath: /etc/vector
        - name: vector-data
          mountPath: /var/log
    - name: loki
      image: grafana/loki
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "4096Mi"
          cpu: "1500m"
        requests:
          memory: "4096Mi"
          cpu: "1500m"
      ports:
        - containerPort: 3100
      args:
        - -config.file=/etc/loki/loki-local-config.yaml
      volumeMounts:
        - name: loki-data
          mountPath: /loki
        - name: loki-config
          mountPath: /etc/loki
    - name: prometheus
      image: prom/prometheus:v2.45.0
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "4096Mi"
          cpu: "2000m"
        requests:
          memory: "4096Mi"
          cpu: "2000m"
      ports:
        - containerPort: 9090
      volumeMounts:
        - name: prometheus-data
          mountPath: /prometheus
        - name: prometheus-config
          mountPath: /etc/prometheus/prometheus.yaml
          subPath: prometheus.yaml
        - name: prometheus-alert-rules
          mountPath: /etc/prometheus/prometheus-alert-rules.yaml
          subPath: prometheus-alert-rules.yaml
    - name: alertmanager
      image: prom/alertmanager:v0.25.0
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "512Mi"
          cpu: "500m"
        requests:
          memory: "512Mi"
          cpu: "500m"
      ports:
        - containerPort: 9093
      volumeMounts:
        - name: alertmanager-config
          mountPath: /etc/alertmanager
    - name: grafana
      image: grafana/grafana:10.0.1
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "8192Mi"
          cpu: "2000m"
        requests:
          memory: "8192Mi"
          cpu: "2000m"
      ports:
        - containerPort: 3000
      volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
        - name: grafana-config
          mountPath: /etc/grafana
        - name: grafana-dashboard
          mountPath: /etc/grafana/dashboards/default
        - name: grafana-dashboards-provisioning
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
  volumes:
    - name: vector-config
      configMap:
        name: monitoring-vector-configmap
    - name: vector-data
      persistentVolumeClaim:
        claimName: monitoring-claim-vector
    - name: loki-data
      persistentVolumeClaim:
        claimName: monitoring-claim-loki
    - name: loki-config
      configMap:
        name: loki-config
    - name: prometheus-data
      persistentVolumeClaim:
        claimName: monitoring-claim-prometheus
    - name: prometheus-config
      configMap:
        name: prometheus-config
    - name: prometheus-alert-rules
      configMap:
        name: prometheus-alert-rules
    - name: alertmanager-config
      configMap:
        name: alertmanager-config
    - name: grafana-data
      persistentVolumeClaim:
        claimName: monitoring-claim-grafana
    - name: grafana-config
      configMap:
        name: grafana-config
    - name: grafana-dashboard
      configMap:
        name: grafana-dashboard
    - name: grafana-dashboards-provisioning
      configMap:
        name: grafana-dashboards-provisioning
    - name: grafana-datasources
      configMap:
        name: grafana-datasources
