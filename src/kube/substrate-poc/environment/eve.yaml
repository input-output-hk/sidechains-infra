---
apiVersion: v1
kind: Service
metadata:
  name: eve-service
  namespace: sc
spec:
  type: NodePort
  selector:
    app: sidechains-substrate-poc
    node: eve
  ports:
    - name: tcp-30333
      port: 30333
      targetPort: 30333
    - name: tcp-9946
      port: 9946
      targetPort: 9946
    - name: tcp-9934
      port: 9934
      targetPort: 9934
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: eve-vector-configmap
  namespace: sc
data:
  vector.toml: |
    [api]
    enabled = true
    address = "0.0.0.0:8686"
    [sources.log_file]
    type = "file"
    include = ["/var/log/*.log"]
    # [sinks.prometheus]
    # type = "prometheus_exporter"
    # inputs = [ "my-source-or-transform-id" ]
    [sinks.console]
    inputs = ["log_file"]
    target = "stdout"
    type = "console"
    encoding.codec = "json"
---
apiVersion: v1
kind: Pod
metadata:
  name: eve
  namespace: sc
  labels:
    app: sidechains-substrate-poc
    node: eve
spec:
  containers:
    - name: cardano-node
      image: inputoutput/cardano-node:8.0.0
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "2048Mi"
          cpu: "1000m"
        requests:
          memory: "2048Mi"
          cpu: "1000m"
      env:
        - name: NETWORK
          value: "preview"
        - name: CARDANO_NODE_SOCKET_PATH
          value: /ipc/node.socket
      volumeMounts:
        - name: ipc
          mountPath: /ipc
        - name: cardano-node-data
          mountPath: /opt/cardano/data
    - name: db-sync
      image: inputoutput/cardano-db-sync:13.1.1.0
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "4096Mi"
          cpu: "2000m"
        requests:
          memory: "4096Mi"
          cpu: "2000m"
      env:
        - name: NETWORK
          value: "preview"
        - name: POSTGRES_HOST
          value: "localhost"
        - name: POSTGRES_DB
          value: "cexplorer"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          value: "password123"
        - name: POSTGRES_PORT
          value: "5432"
      volumeMounts:
        - name: ipc
          mountPath: /node-ipc
    - name: postgres
      image: postgres:15.3
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "2048Mi"
          cpu: "1000m"
        requests:
          memory: "2048Mi"
          cpu: "1000m"
      ports:
        - containerPort: 5432
          protocol: TCP
      env:
        - name: POSTGRES_PASSWORD
          value: "password123"
        - name: POSTGRES_DB
          value: "cexplorer"
      volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
    - name: bridge-backend
      image: 689191102645.dkr.ecr.eu-central-1.amazonaws.com/bridge-backend:0.0.17
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "512Mi"
          cpu: "500m"
        requests:
          memory: "512Mi"
          cpu: "500m"
      env:
        - name: CARDANO_FOLLOWER_POSTGRES_USERNAME
          value: "postgres"
        - name: CARDANO_FOLLOWER_POSTGRES_PASSWORD
          value: "password123"
        - name: CARDANO_FOLLOWER_JDBC_URL
          value: "jdbc:postgresql://localhost:5432/cexplorer"
      volumeMounts:
        - name: ipc
          mountPath: /local
    - name: substrate-node
      image: 689191102645.dkr.ecr.eu-central-1.amazonaws.com/sidechains-substrate-node:v0.0.3
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "1024Mi"
          cpu: "1000m"
        requests:
          memory: "1024Mi"
          cpu: "1000m"
      args:
        - "--eve"
        - "--base-path"
        - "/data"
        - "--chain"
        - "local"
        - "--validator"
        - "--node-key"
        - "0000000000000000000000000000000000000000000000000000000000000005"
        - "--bootnodes"
        - "/dns/alice-service.sc.svc.cluster.local/tcp/30333/p2p/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp"
      ports:
        - containerPort: 30333
          name: p2p
        - containerPort: 9945
          name: ws-port
        - containerPort: 9933
          name: rpc-port
      volumeMounts:
        - name: substrate-node-data
          mountPath: /data
    - name: vector
      image: timberio/vector:nightly-alpine
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "300Mi"
          cpu: "300m"
        requests:
          memory: "300Mi"
          cpu: "200m"
      ports:
        - containerPort: 8686
      volumeMounts:
        - name: vector-config
          mountPath: /etc/vector
        - name: vector-logs
          mountPath: /var/log

  volumes:
    - name: cardano-node-data
      persistentVolumeClaim:
        claimName: eve-claim-cardano-node-data
    - name: postgres-data
      persistentVolumeClaim:
        claimName: eve-claim-postgres-data
      #emptyDir: {}
    - name: substrate-node-data
      persistentVolumeClaim:
        claimName: eve-claim-substrate-node-data
    - name: ipc
      emptyDir: {}
    - name: vector-config
      configMap:
        name: eve-vector-configmap
    - name: vector-logs
      persistentVolumeClaim:
        claimName: eve-claim-vector-logs